openapi: 3.0.0
info:
  title: Todo App Api
  description: API documentation for the Todo app.
  version: 1.0.0
  contact:
    name: Md Selim
    email: "contact.mdselim.dev@gmail.com "

servers:
  - url: https://postgres-express-todo-authentication-assignment.vercel.app/
    description: Local Server

paths:
  /api/user/register:
    post:
      summary: User Register
      description: Create a User and After successfully creating a user retun a message with users data and email.
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  format: name
                  example: "Jhon Due"
                email:
                  type: string
                  format: email
                  example: "example@gmail.com"
                password:
                  type: string
                  format: password
                  example: "password123"
              required:
                - name
                - email
                - password
      responses:
        "201":
          description: Successful Register response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "User Created Successfully"
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 12
                      name:
                        type: string
                        example: "Jhon Due"
                      email:
                        type: string
                        example: "example@gmail.com"                 
        "400":
          description: Already Have An Account.
        "401":
          description: All feilds are required.
        "500":
          description: Internal server error.



  /api/user/login:
    post:
      summary: User Login
      description: Authenticates a user and returns user details along with a JWT token.
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  example: "example@gmail.com"
                password:
                  type: string
                  format: password
                  example: "password123"
              required:
                - email
                - password
      responses:
        "200":
          description: Successful login response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Login successful"
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 12
                      name:
                        type: string
                        example: "Jhon Due"
                      email:
                        type: string
                        example: "example@gmail.com"
                  webToken:
                    type: string
                    example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9....."
        "400":
          description: Invalid request payload.
        "401":
          description: Invalid Email.
        "500":
          description: Internal server error.
